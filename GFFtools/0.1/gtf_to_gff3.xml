<tool id="fml_gtf2gff3" name="GTF_to_GFF3" version="0.1">
	<description>converter</description> 
	<command interpreter="python">
        gtf_to_gff_conv.py 
        $inf_gtf 
        > $gff3_format 
	</command> 
	<inputs>
  		<param format="gtf,gff" name="inf_gtf" type="data" label="Convert this query" help="Data in Gene Transfer Format (GTF)."/>
    </inputs>
  	<outputs>
  		<data format="gff3" name="gff3_format" label="${tool.name} on ${on_string}: Converted GFF"/> 
  	</outputs>
	    <tests>
        	<test>
                <param name="inf_gtf" value="UCSC_transcripts.gtf" />
                <output name="gff3_format" file="UCSC_transcripts.gff3" />
        	</test>
        	<test>
                <param name="inf_gtf" value="JGI_genes.gtf" />
                <output name="gff3_format" file="JGI_genes.gff3" />
        	</test>
        	<test>
                <param name="inf_gtf" value="ENSEMBL_mm9.gtf" />
                <output name="gff3_format" file="ENSEMBL_mm9.gff3" />
        	</test>
        	<test>
                <param name="inf_gtf" value="AceView_ncbi_37.gtf" />
                <output name="gff3_format" file="AceView_ncbi_37.gff3" />
        	</test>
        </tests>
  	<help>

**What it does**

GTF-to-GFF3 converts data from Gene Transfer Format (GTF) to a valid Generic Feature Format Version 3 (GFF3).

--------

**Example**

- The following data in GTF::

	17      protein_coding  exon    7255208 7258258 .       +       .        gene_id "ENSG00000213859"; transcript_id "ENST00000333751"; exon_number "1"; gene_name "KCTD11"; transcript_name "KCTD11-001";
	17      protein_coding  CDS     7256262 7256957 .       +       0        gene_id "ENSG00000213859"; transcript_id "ENST00000333751"; exon_number "1"; gene_name "KCTD11"; transcript_name "KCTD11-001"; protein_id "ENSP00000328352";
	17      protein_coding  start_codon     7256262 7256264 .       +       0        gene_id "ENSG00000213859"; transcript_id "ENST00000333751"; exon_number "1"; gene_name "KCTD11"; transcript_name "KCTD11-001";
	17      protein_coding  stop_codon      7256958 7256960 .       +       0        gene_id "ENSG00000213859"; transcript_id "ENST00000333751"; exon_number "1"; gene_name "KCTD11"; transcript_name "KCTD11-001";

- Will be converted to GFF3::

	##gff-version 3
	17      protein_coding  gene    7255208 7258258 .       +       .       ID=ENSG00000213859;Name=KCTD11
	17      protein_coding  mRNA    7255208 7258258 .       +       .       ID=ENST00000333751;Name=KCTD11-001;Parent=ENSG00000213859
	17      protein_coding  five_prime_UTR  7255208 7256261 .       +       .       Parent=ENST00000333751
	17      protein_coding  CDS     7256262 7256960 .       +       0       Parent=ENST00000333751
	17      protein_coding  three_prime_UTR 7256961 7258258 .       +       .       Parent=ENST00000333751
	17      protein_coding  exon    7255208 7258258 .       +       .       Parent=ENST00000333751

--------

**About formats**

**GTF format** Gene Transfer Format, it borrows from GFF, but has additional structure that warrants a separate definition and format name. GTF lines have nine tab-seaparated fields:

1. seqname - The name of the sequence.
2. source - This indicating where the annotation came from.
3. feature - The name of the feature types. The following feature types are required: 'CDS', 'start_codon' and 'stop_codon'
4. start - The starting position of the feature in the sequence. The first base is numbered 1.
5. end - The ending position of the feature (inclusive).
6. score - The score field indicates a degree of confidence in the feature's existence and coordinates.
7. strand - Valid entries include '+', '-', or '.'
8. frame - If the feature is a coding exon, frame should be a number between 0-2 that represents the reading frame of the first base.
9. attributes - These attributes are designed for handling multiple transcripts from the same genomic region.

**GFF3 format** Generic Feature Format is a format for describing genes and other features associated with DNA, RNA and Protein sequences. GFF3 lines have nine tab-separated fields:

1. seqid - Must be a chromosome or scaffold.
2. source - The program that generated this feature.
3. type - The name of this type of feature. Some examples of standard feature types are "gene", "CDS", "protein", "mRNA", and "exon". 
4. start - The starting position of the feature in the sequence. The first base is numbered 1.
5. stop - The ending position of the feature (inclusive).
6. score - A score between 0 and 1000. If there is no score value, enter ".".
7. strand - Valid entries include '+', '-', or '.' (for don't know/care).
8. phase - If the feature is a coding exon, frame should be a number between 0-2 that represents the reading frame of the first base. If the feature is not a coding exon, the value should be '.'.
9. attributes - All lines with the same group are linked together into a single item.

--------

Copyright (C) 2009-2013 Max Planck Society and Memorial Sloan-Kettering Cancer Center

	</help>
</tool>
